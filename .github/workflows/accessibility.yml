name: Accessibility Testing

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: '0 2 * * 0' # Weekly accessibility scan

jobs:
  accessibility-testing:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install -g @axe-core/cli
          npm install -g pa11y
          npm install -g lighthouse
          npm install -g axe-core
          npm install -g @pa11y/pa11y

      - name: Build application
        run: npm run build

      - name: Start application server
        run: |
          npm run serve &
          sleep 10
        env:
          NODE_ENV: production

      - name: Run axe-core accessibility tests
        run: |
          axe http://localhost:3000 --reporter=json --output=axe-results.json || true
          axe http://localhost:3000 --reporter=html --output=axe-results.html || true
        continue-on-error: true

      - name: Run Pa11y accessibility tests
        run: |
          pa11y --reporter json --output pa11y-results.json http://localhost:3000 || true
          pa11y --reporter html --output pa11y-results.html http://localhost:3000 || true
        continue-on-error: true

      - name: Run Lighthouse accessibility audit
        run: |
          lighthouse http://localhost:3000 --output=json --output-path=lighthouse-results.json --only-categories=accessibility || true
          lighthouse http://localhost:3000 --output=html --output-path=lighthouse-results.html --only-categories=accessibility || true
        continue-on-error: true

      - name: Run custom accessibility tests
        run: |
          node scripts/accessibility-test.js
          node scripts/enhanced-accessibility-test.js
          node scripts/advanced-accessibility-test.js
        continue-on-error: true

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-results-${{ matrix.node-version }}
          path: |
            axe-results.json
            axe-results.html
            pa11y-results.json
            pa11y-results.html
            lighthouse-results.json
            lighthouse-results.html
          retention-days: 30

      - name: Comment PR with accessibility results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read test results
            let axeResults = {};
            let pa11yResults = {};
            let lighthouseResults = {};
            
            try {
              axeResults = JSON.parse(fs.readFileSync('axe-results.json', 'utf8'));
            } catch (e) {
              console.log('No axe results found');
            }
            
            try {
              pa11yResults = JSON.parse(fs.readFileSync('pa11y-results.json', 'utf8'));
            } catch (e) {
              console.log('No pa11y results found');
            }
            
            try {
              lighthouseResults = JSON.parse(fs.readFileSync('lighthouse-results.json', 'utf8'));
            } catch (e) {
              console.log('No lighthouse results found');
            }
            
            // Generate comment
            let comment = '## üîç Accessibility Test Results\n\n';
            
            if (axeResults.violations) {
              comment += `### axe-core Results\n`;
              comment += `- **Violations**: ${axeResults.violations.length}\n`;
              comment += `- **Passes**: ${axeResults.passes ? axeResults.passes.length : 0}\n`;
              comment += `- **Incomplete**: ${axeResults.incomplete ? axeResults.incomplete.length : 0}\n\n`;
            }
            
            if (pa11yResults.length) {
              comment += `### Pa11y Results\n`;
              comment += `- **Issues**: ${pa11yResults.length}\n\n`;
            }
            
            if (lighthouseResults.categories) {
              const accessibilityScore = lighthouseResults.categories.accessibility.score * 100;
              comment += `### Lighthouse Accessibility Score\n`;
              comment += `- **Score**: ${accessibilityScore}/100\n\n`;
            }
            
            comment += '### üìã Next Steps\n';
            comment += '- Review accessibility violations\n';
            comment += '- Fix critical accessibility issues\n';
            comment += '- Test with screen readers\n';
            comment += '- Validate keyboard navigation\n';
            
            // Post comment
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  accessibility-regression-prevention:
    runs-on: ubuntu-latest
    needs: accessibility-testing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download accessibility results
        uses: actions/download-artifact@v4
        with:
          name: accessibility-results-18
          path: ./results

      - name: Analyze accessibility regression
        run: |
          node scripts/accessibility-regression-check.js
        continue-on-error: true

      - name: Fail build on critical accessibility issues
        run: |
          if [ -f "critical-accessibility-issues.json" ]; then
            echo "Critical accessibility issues found!"
            cat critical-accessibility-issues.json
            exit 1
          fi

  accessibility-documentation:
    runs-on: ubuntu-latest
    needs: accessibility-testing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate accessibility report
        run: |
          node scripts/generate-accessibility-report.js
        continue-on-error: true

      - name: Upload accessibility documentation
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-documentation
          path: |
            docs/ACCESSIBILITY_REPORT.md
            docs/ACCESSIBILITY_COMPLIANCE.md
            docs/ACCESSIBILITY_TESTING_GUIDE.md
          retention-days: 90
