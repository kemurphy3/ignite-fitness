name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        
    - name: Check coverage thresholds
      run: |
        echo "Coverage thresholds are enforced by Vitest configuration"
        echo "Minimum coverage: 80% for branches, functions, lines, statements"
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results.json
          coverage/
          
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: |
        # Check for common issues
        echo "Checking for skipped tests..."
        if grep -r "\.skip(" tests/ --include="*.js"; then
          echo "❌ Found skipped tests - these should be activated or removed"
          exit 1
        else
          echo "✅ No skipped tests found"
        fi
        
        echo "Checking for TODO comments in tests..."
        if grep -r "TODO:" tests/ --include="*.js"; then
          echo "⚠️  Found TODO comments in tests - consider implementing or removing"
        else
          echo "✅ No TODO comments in tests"
        fi
        
    - name: Check test file structure
      run: |
        echo "Checking test file structure..."
        if [ ! -d "tests" ]; then
          echo "❌ Tests directory not found"
          exit 1
        fi
        
        echo "✅ Test directory structure looks good"
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for hardcoded secrets
      run: |
        echo "Checking for potential secrets..."
        if grep -r "password\|secret\|key\|token" --include="*.js" --include="*.json" . | grep -v node_modules | grep -v ".env" | grep -v "test"; then
          echo "⚠️  Found potential secrets - please review"
        else
          echo "✅ No obvious secrets found"
        fi